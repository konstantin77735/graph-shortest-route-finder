{"version":3,"sources":["libs/popupClass.ts"],"names":[],"mappings":";;;AAAA;IACI,eAAY,IAAI;QACZ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC9C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAC5C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC1C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAChD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,IAAI,MAAM,CAAC;QAChD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,OAAO,CAAC;QAC/C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC;QAC5C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,IAAI,GAAG,CAAC,CAAC,qBAAqB;QAC3E,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,IAAI,QAAQ,CAAC,CAAC,qBAAqB;QAChF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,GAAG,CAAC,CAAC,qBAAqB;QACjE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,MAAM,CAAC,CAAC,qBAAqB;QACpE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,IAAI,KAAK,CAAC,CAAC,8DAA8D;QAC1G,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QACxC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,6BAA6B;QAChE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,6BAA6B;QAClE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC,2CAA2C;QACxF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,IAAI,OAAO,CAAC,CAAC,sGAAsG;QAEpJ,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAG,IAAI,CAAC,eAAe,CAAE,CAAC,CAAC;QACtE,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAG,IAAI,CAAC,cAAc,CAAE,CAAC,CAAC;QAEpE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;QAC5B,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,oBAAI,GAAJ;QAAA,iBA2GC;QA1GG,IAAI,CAAC,IAAI,EAAE,CAAC;QAEZ,iDAAiD;QAEjD,0EAA0E;QAC1E,iGAAiG;QACjG,iEAAiE;QACjE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK;YAEtC,4FAA4F;YAC5F,IAAM,mBAAmB,GAAG,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YAE5D,sCAAsC;YACtC,mCAAmC;YAEnC,wBAAwB;YACxB,mBAAmB,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK;gBACpC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAA;gBAChC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;gBACjB,+CAA+C;gBAC/C,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC;gBACrD,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC;YAC9D,CAAC,CAAC,CAAA;QAIN,CAAC,CAAC,CAAC;QAEH,4EAA4E;QAC5E,iGAAiG;QACjG,iEAAiE;QACjE,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK;YACvC,4FAA4F;YAC5F,IAAM,oBAAoB,GAAG,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YAE7D,uCAAuC;YACvC,oCAAoC;YAEpC,wBAAwB;YACxB,oBAAoB,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK;gBACrC,oCAAoC;gBACpC,oBAAoB;gBACpB,+CAA+C;gBAC/C,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC;gBACrD,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC;YAC9D,CAAC,CAAC,CAAA;QACN,CAAC,CAAC,CAAC;QAIH,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAM,eAAa,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc;YAEnE,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAC,CAAC;gBAC1C,IAAI,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAG,eAAa,CAAE,CAAC,EAAE;oBACjD,KAAI,CAAC,IAAI,EAAE,CAAC;iBACf;YACL,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,YAAY,EAAE,UAAC,CAAC;gBAC/C,IAAI,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAG,eAAa,CAAE,CAAC,EAAE;oBACjD,KAAI,CAAC,IAAI,EAAE,CAAC;iBACf;YACL,CAAC,CAAC,CAAC;SACN;QAED,sEAAsE;QACtE,IAAM,aAAa,GAAG,UAAC,IAAY,EAAE,KAAK,EAAE,IAAI;YAAzB,qBAAA,EAAA,YAAY;YAE/B,IAAI,IAAI,EAAE;gBAEN,QAAQ,CAAC,gBAAgB,CAAC,KAAK,EAAE,UAAC,CAAC;oBAC/B,IAAI,CAAC,OAAO,CAAC,UAAC,IAAI;wBACd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;wBACjB,IAAI,IAAI,IAAI,CAAC,CAAC,OAAO,EAAE;4BACnB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,CAAA;4BACjB,IAAI,EAAE,CAAC;yBACV;oBACL,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;aACN;QAEL,CAAC,CAAA;QAGD,yBAAyB;QACzB,oDAAoD;QACpD,+CAA+C;QAC/C,sDAAsD;QACtD,+BAA+B;QAC/B,gBAAgB;QAChB,cAAc;QACd,UAAU;QACV,IAAI;QAEJ,0BAA0B;QAC1B,oDAAoD;QACpD,+CAA+C;QAC/C,sDAAsD;QACtD,+BAA+B;QAC/B,gBAAgB;QAChB,cAAc;QACd,UAAU;QACV,IAAI;QAEJ,aAAa,CAAC,IAAI,CAAC,UAAU,EAAE,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAChE,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACrE,CAAC;IAED,oBAAI,GAAJ;QAAA,iBAmCC;QAlCG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;QAExC,IAAI,IAAI,CAAC,UAAU,IAAI,OAAO,EAAE;YAC5B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,GAAG,cAAO,IAAI,CAAC,WAAW,GAAG,IAAI,eAAK,IAAI,CAAC,WAAW,yBAAe,IAAI,CAAC,WAAW,QAAK,CAAC;YAC5H,QAAQ,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,UAAU,EAAE;gBAC7D,KAAK,MAAM;oBACP,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;oBACpC,MAAM;gBACV,KAAK,OAAO;oBACR,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;oBACrC,MAAM;gBACV,KAAK,KAAK;oBACN,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;oBACnC,MAAM;gBACV,KAAK,QAAQ;oBACT,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;oBACtC,MAAM;aACb;SACJ;QAED,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC;QAClD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;QAChD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC;QACpC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,UAAU,GAAG,kBAAW,IAAI,CAAC,gBAAgB,GAAG,IAAI,eAAK,IAAI,CAAC,gBAAgB,yBAAe,IAAI,CAAC,gBAAgB,QAAK,CAAC;QAMhJ,sEAAsE;QACtE,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,UAAU,CAAC,cAAQ,KAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;SAC1D;IAEL,CAAC;IAED,oBAAI,GAAJ;QACI,sBAAsB;QACtB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC;QACpC,gBAAgB;QAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;QAE9B,IAAI,IAAI,CAAC,UAAU,IAAI,OAAO,EAAE;YAC5B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,GAAG,cAAO,IAAI,CAAC,WAAW,GAAG,IAAI,eAAK,IAAI,CAAC,WAAW,yBAAe,IAAI,CAAC,WAAW,cAAI,IAAI,CAAC,WAAW,GAAG,IAAI,MAAG,CAAC;YAErJ,QAAQ,IAAI,CAAC,UAAU,EAAE;gBACrB,KAAK,MAAM;oBACP,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;oBACtC,MAAM;gBACV,KAAK,OAAO;oBACR,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;oBACvC,MAAM;gBACV,KAAK,KAAK;oBACN,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;oBACrC,MAAM;gBACV,KAAK,QAAQ;oBACT,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC;oBACxC,MAAM;aACb;SAEJ;QACD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,UAAU,GAAG,kBAAW,IAAI,CAAC,gBAAgB,GAAG,IAAI,eAAK,IAAI,CAAC,gBAAgB,yBAAe,IAAI,CAAC,gBAAgB,cAAI,IAAI,CAAC,gBAAgB,GAAG,IAAI,MAAG,CAAC;IAKlL,CAAC;IAEL,YAAC;AAAD,CA9MA,AA8MC,IAAA;AA9MY,sBAAK","file":"popupClass.js","sourcesContent":["export class Popup {\n    constructor(data) {\n        this.triggerSelectors = data.triggerSelectors;\n        this.overlaySelector = data.overlaySelector;\n        this.windowSelector = data.windowSelector;\n        this.closeBtnSelectors = data.closeBtnSelectors;\n        this.displayPopup = data.displayPopup || 'flex';\n        this.popupHeight = data.popupHeight || '100vh';\n        this.popupWidth = data.popupWidth || '100%';\n        this.disappearingTime = data.disappearingTime || 600; //это для transition \n        this.disappearingType = data.disappearingType || 'linear'; //это для transition \n        this.slidingTime = data.slidingTime || 500; //это для transition \n        this.slidingType = data.slidingType || 'ease'; //это для transition \n        this.slidingDir = data.slidingDir || 'top'; //откуда (с какой стороны) выедет попап если он должен выехать\n        this.autocloseTime = data.autocloseTime;\n        this.openOnKeys = data.openOnKeys; //должен быть массивом кнопок\n        this.closeOnKeys = data.closeOnKeys; //должен быть массивом кнопок\n        this.closeOnMiss = data.closeOnMiss || true; //закрыть, если клик мимо центрального окна\n        this.appearType = data.appearType || 'slide'; //тип появления попапа: slide (выехать из-за границы экрана) или reveal (появится/исчезнуть по центру)\n\n        this.popupOverlay = document.querySelector(`${this.overlaySelector}`);\n        this.popupWindow = document.querySelector(`${this.windowSelector}`);\n\n        console.log(this.appearType)\n        this.init();\n    }\n\n    init() {\n        this.hide();\n\n        //по нажатию по триггерам будет открываться попап\n\n        //в this.TiggerSelectors перечислены нужные селекторы для открытия попапа.\n        //Проходим по ним циклом, и на каждой итерации берём все элементы на странице с каждым селектором\n        //И на каждый элемент с таким селектором вешаем слушатель событий\n        this.triggerSelectors.forEach((item, index) => {\n\n            //берём все элементы с селектором открытия попапа (сначала с первым, потом со вторым и т.д.)\n            const allTriggerInstances = document.querySelectorAll(item);\n\n            // console.log('allTriggerInstances:')\n            // console.log(allTriggerInstances)\n\n            //проходим по ним циклом\n            allTriggerInstances.forEach((item, index) => {\n                console.log('trigger instance:')\n                console.log(item)\n                //и на каждый элемент вешаем обработчик событий\n                item.addEventListener('click', this.show.bind(this));\n                item.addEventListener('touchstart', this.show.bind(this));\n            })\n\n\n\n        });\n\n        //в this.closeBtnSelectors перечислены нужные селекторы для закрытия попапа.\n        //Проходим по ним циклом, и на каждой итерации берём все элементы на странице с каждым селектором\n        //И на каждый элемент с таким селектором вешаем слушатель событий\n        this.closeBtnSelectors.forEach((item, index) => {\n            //берём все элементы с селектором закрытия попапа (сначала с первым, потом со вторым и т.д.)\n            const allCloseBtnInstances = document.querySelectorAll(item);\n\n            // console.log('allCloseBtnInstances:')\n            // console.log(allCloseBtnInstances)\n\n            //проходим по ним циклом\n            allCloseBtnInstances.forEach((item, index) => {\n                // console.log('closeBtn instance:')\n                // console.log(item)\n                //и на каждый элемент вешаем обработчик событий\n                item.addEventListener('click', this.hide.bind(this));\n                item.addEventListener('touchstart', this.hide.bind(this));\n            })\n        });\n\n\n\n        if (this.closeOnMiss) {\n            const popupSelector = this.overlaySelector.slice(1); //without dot \n\n            this.popupOverlay.addEventListener('click', (e) => {\n                if (e.target.classList.contains(`${popupSelector}`)) {\n                    this.hide();\n                }\n            });\n            this.popupOverlay.addEventListener('touchstart', (e) => {\n                if (e.target.classList.contains(`${popupSelector}`)) {\n                    this.hide();\n                }\n            });\n        }\n\n        //вешаем обработчики на клавиши на события открытия и закрытия попапа \n        const hangListeners = (keys = false, event, func) => {\n\n            if (keys) {\n\n                document.addEventListener(event, (e) => {\n                    keys.forEach((item) => {\n                        console.log(keys)\n                        if (item == e.keyCode) {\n                            console.log(this)\n                            func();\n                        }\n                    });\n                });\n            }\n\n        }\n\n\n        // if (this.openOnKeys) {\n        //     document.addEventListener('keydown', (e) => {\n        //         this.closeOnKeys.forEach((item) => {\n        //             if (parseInt(item, 10) === e.keyCode) {\n        //                 this.show();\n        //             }\n        //         });\n        //     });\n        // }\n\n        // if (this.closeOnKeys) {\n        //     document.addEventListener('keydown', (e) => {\n        //         this.closeOnKeys.forEach((item) => {\n        //             if (parseInt(item, 10) === e.keyCode) {\n        //                 this.hide();\n        //             }\n        //         });\n        //     });\n        // }\n\n        hangListeners(this.openOnKeys, 'keydown', this.show.bind(this));\n        hangListeners(this.closeOnKeys, 'keydown', this.hide.bind(this));\n    }\n\n    show() {\n        this.popupOverlay.style.zIndex = 999999;\n\n        if (this.appearType == 'slide') {\n            this.popupWindow.style.transition = `all ${this.slidingTime / 1000}s ${this.slidingType}, height 0s ${this.slidingType} 0s`;\n            switch (this.slidingTime && this.slidingType && this.slidingDir) {\n                case 'left':\n                    this.popupWindow.style.left = '0px';\n                    break;\n                case 'right':\n                    this.popupWindow.style.right = '0px';\n                    break;\n                case 'top':\n                    this.popupWindow.style.top = '0px';\n                    break;\n                case 'bottom':\n                    this.popupWindow.style.bottom = '0px';\n                    break;\n            }\n        }\n\n        this.popupOverlay.style.height = this.popupHeight;\n        this.popupOverlay.style.width = this.popupWidth;\n        this.popupOverlay.style.opacity = 1;\n        this.popupOverlay.style.transition = `opacity ${this.disappearingTime / 1000}s ${this.disappearingType}, height 0s ${this.disappearingType} 0s`;\n\n\n\n\n\n        //если задано время автозакрытия, то закрыть попап прохождения времени\n        if (this.autocloseTime) {\n            setTimeout(() => { this.hide(); }, this.autocloseTime);\n        }\n\n    }\n\n    hide() {\n        //      --- Hide Popup\n        this.popupOverlay.style.height = 0;\n        this.popupOverlay.style.opacity = 0;\n        //      ---     \n        console.log(this.popupOverlay)\n\n        if (this.appearType == 'slide') {\n            this.popupWindow.style.transition = `all ${this.slidingTime / 1000}s ${this.slidingType}, height 0s ${this.slidingType} ${this.slidingTime / 1000}s`;\n\n            switch (this.slidingDir) {\n                case 'left':\n                    this.popupWindow.style.left = '-100%';\n                    break;\n                case 'right':\n                    this.popupWindow.style.right = '-100%';\n                    break;\n                case 'top':\n                    this.popupWindow.style.top = '-100%';\n                    break;\n                case 'bottom':\n                    this.popupWindow.style.bottom = '-100%';\n                    break;\n            }\n\n        }\n        this.popupOverlay.style.transition = `opacity ${this.disappearingTime / 1000}s ${this.disappearingType}, height 0s ${this.disappearingType} ${this.disappearingTime / 1000}s`;\n\n\n\n\n    }\n\n}"]}